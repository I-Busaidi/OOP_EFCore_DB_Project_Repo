// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OOP_EFCore_DB_Project_Implementation;

#nullable disable

namespace OOP_EFCore_DB_Project_Implementation.Migrations
{
    [DbContext(typeof(LibraryAppDbContext))]
    partial class LibraryAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AdminFname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminLname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminPasscode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("MasterAdminId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("AdminEmail")
                        .IsUnique();

                    b.HasIndex("MasterAdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BorrowPeriod")
                        .HasColumnType("int");

                    b.Property<int>("BorrowedCopies")
                        .HasColumnType("int");

                    b.Property<int>("CatId")
                        .HasColumnType("int");

                    b.Property<decimal>("CopyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("BookName")
                        .IsUnique();

                    b.HasIndex("CatId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Borrow", b =>
                {
                    b.Property<int>("BorrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BorrowId", "UserId", "BookId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrows");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Category", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatId"));

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumOfBooks")
                        .HasColumnType("int");

                    b.HasKey("CatId");

                    b.HasIndex("CatName")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passcode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Admin", b =>
                {
                    b.HasOne("OOP_EFCore_DB_Project_Implementation.Models.Admin", "MasterAdmin")
                        .WithMany("ManagedAdmins")
                        .HasForeignKey("MasterAdminId");

                    b.Navigation("MasterAdmin");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Book", b =>
                {
                    b.HasOne("OOP_EFCore_DB_Project_Implementation.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Borrow", b =>
                {
                    b.HasOne("OOP_EFCore_DB_Project_Implementation.Models.Book", "Book")
                        .WithMany("Borrows")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OOP_EFCore_DB_Project_Implementation.Models.User", "User")
                        .WithMany("Borrows")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Admin", b =>
                {
                    b.Navigation("ManagedAdmins");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Book", b =>
                {
                    b.Navigation("Borrows");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("OOP_EFCore_DB_Project_Implementation.Models.User", b =>
                {
                    b.Navigation("Borrows");
                });
#pragma warning restore 612, 618
        }
    }
}
